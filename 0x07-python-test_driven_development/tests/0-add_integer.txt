"""
Test cases for 0-add_integer.py
===============================
	args = a and b

importing the add-integer function from its module
	>>> add_integer = __import__('0-add_integer').add_integer

adding two positive integers	
	>>> add_integer(2, 4)
	6

adding two negative integers
	>>> add_integer(-2, -4)
	-6

adding a float and an integer
        >>> add_integer(2, -4.0)
        -2

if a is a string
	>>> add_integer('a', -4.0)
	Traceback (most recent call last):
		...
	TypeError: a must be an integer

if b is a string
        >>> add_integer(2.0, 'b')
        Traceback (most recent call last):
                ...
        TypeError: b must be an integer

if a and b are both strings
        >>> add_integer('a', 'b')
        Traceback (most recent call last):
                ...
        TypeError: a must be an integer

if an undefined is passed as an arg
        >>> add_integer(a, -4.0) #doctest: +ELLIPSIS
        Traceback (most recent call last):
                ...
        NameError: name '...' is not defined

if none is passed as an arg
	>>> add_integer(None)
	Traceback (most recent call last):
                ...
        TypeError: a must be an integer

if a string is passed as an arg
	>>> add_integer("HI")
	Traceback (most recent call last):
                ...
        TypeError: a must be an integer

adding 2 floats
        >>> add_integer(2.0, -4.3)
        -2

adding 2 to 98(i.e b=98)
	>>> add_integer(2)
        100

adding a tuple
	>>> add_integer((1,2))
	Traceback (most recent call last):
                ...
        TypeError: a must be an integer

adding a number and a list
	>>> add_integer([2, 3], 2)
	Traceback (most recent call last):
                ...
        TypeError: a must be an integer

Infinity cases 1
	>>> add_integer(float('inf'), 0)
	Traceback (most recent call last):
                ...
	OverflowError: cannot convert float infinity to integer

Infinity cases 2
        >>> add_integer(float('inf'), float('-inf'))
        Traceback (most recent call last):
                ...
        OverflowError: cannot convert float infinity to integer

NaN case
        >>> add_integer(float('nan'), 0)
        Traceback (most recent call last):
                ...
        ValueError: cannot convert float NaN to integer


"""
