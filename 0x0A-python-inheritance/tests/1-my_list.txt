1-my_list module
================

Test for the Public instance method: def print_sorted(self):
============================================================

importing funtion from module:
	>>> MyList = __import__('1-my_list').MyList

Printing a sorted list: Test 1 (positive numbers)
	>>> my_list = MyList()
	>>> my_list.append(4)
	>>> my_list.append(5)
	>>> my_list.append(3)
	>>> my_list.append(1)
	>>> my_list.append(2)
	>>> my_list.print_sorted()
	[1, 2, 3, 4, 5]

Printing a sorted list: Test 2 (negative numbers)
        >>> my_list = MyList()
        >>> my_list.append(-4)
        >>> my_list.append(-5)
        >>> my_list.append(-3)
        >>> my_list.append(-1)
        >>> my_list.append(-2)
        >>> my_list.print_sorted()
        [-5, -4, -3, -2, -1]

Printing a sorted list: Test 1 (positive and negative numbers)
        >>> my_list = MyList()
        >>> my_list.append(4)
        >>> my_list.append(0)
        >>> my_list.append(3)
        >>> my_list.append(-1)
        >>> my_list.append(-2)
        >>> my_list.print_sorted()
        [-2, -1, 0, 3, 4]

Test - check Mylist is a subclass of the class list
        >>> issubclass(MyList, list)
        True

Test - check the intance has the correct type
        >>> my_list = MyList()
        >>> type(my_list) == MyList
        True

Test - an empty list
        >>> my_list = MyList()
        >>> my_list.print_sorted()
        []

Test - print_sorted method with 2 passed arguments
        >>> my_list = MyList()
        >>> my_list.print_sorted([1, 4], [2, 4])
        Traceback (most recent call last):
                ...
        TypeError: print_sorted() takes 1 positional argument but 3 were given

Test - Print_sorted method with 1 passed argument
        >>> my_list = MyList()
        >>> my_list.print_sorted([1, 2, 3])
        Traceback (most recent call last):
                ...
        TypeError: print_sorted() takes 1 positional argument but 2 were given

Test - check MyList is an instance of the class list
        >>> my_list = MyList()
        >>> isinstance(my_list, list)
        True
